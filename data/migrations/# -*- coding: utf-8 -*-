# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations


class Migration(migrations.Migration):

    dependencies = [
        ('data', '0002_extendedhabitationelementdata'),
    ]

    sql = """
    create VIEW data_extendedhabitationelementdata AS
    select name,habitation_id,latitide,longitude,village_id,
    max(f_l),
    max(as_l),
    max(fe_l),
    max(n_l),
    max(s_l),
    max(f_al),
    max(as_al),
    max(fe_al),
    max(n_al),
    max(s_al),
    max(f_count),
    max(fe_count),
    max(as_count),
    max(n_count),
    max(s_count)
    from(
    select h.name as name,
    h.id as habitation_id,
    h.latitude as latitude,
    h.longitude as longitude,
    h.village_id as village_id,
    ef.permissible_limit_high as f_l, 
    eas.permissible_limit_high as as_l,
    efe.permissible_limit_high as fe_l,
    en.permissible_limit_high as n_l,
    es.permissible_limit_high as s_l,
    case when hed.element_id = ef.id then hed.count end as f_count,
    case when hed.element_id = efe.id then hed.count end as fe_count,
    case when hed.element_id = eas.id then hed.count end as as_count,
    case when hed.element_id = en.id then hed.count end as n_count,
    case when hed.element_id = es.id then hed.count end as s_count,
    case when hed.element_id = ef.id and hed.count >= ef.permissible_limit_high then 2 else
        case when hed.element_id = ef.id and hed.count >= ef.permissible_limit_low then 1 else 0
        end
    end as f_al,
    case when hed.element_id = eas.id and hed.count >= eas.permissible_limit_high then 2 else
        case when hed.element_id = eas.id and hed.count >= eas.permissible_limit_low then 1 else 0
        end
    end as as_al,
    case when hed.element_id = efe.id and hed.count >= efe.permissible_limit_high then 2 else
        case when hed.element_id = efe.id and hed.count >= efe.permissible_limit_low then 1 else 0
        end
    end as fe_al,
    case when hed.element_id = en.id and hed.count >= en.permissible_limit_high then 2 else
        case when hed.element_id = en.id and hed.count >= en.permissible_limit_low then 1 else 0
        end
    end as n_al,
    case when hed.element_id = es.id and hed.count >= es.permissible_limit_high then 2 else
        case when hed.element_id = es.id and hed.count >= es.permissible_limit_low then 1 else 0
        end
    end as s_al
    from data_habitationdata as h
    join (select * from data_habitationelementdata hedf join data_elementdata as ef on hed.element_id = ef.id and ef.name = 'Fluoride')
    left join data_habitationelementdata as hed on h.id = hed.habitation_id
    left join data_elementdata as ef on hed.element_id = ef.id and ef.name = 'Fluoride'
    left join data_elementdata as eas on hed.element_id = eas.id and eas.name = 'Arsenic'
    left join data_elementdata as efe on hed.element_id = efe.id and efe.name = 'Iron'
    left join data_elementdata as en on hed.element_id = en.id and en.name = 'Nitrate'
    left join data_elementdata as es on hed.element_id = es.id and es.name = 'Salinity')
    ;
    """

    operations = [
        migrations.RunSQL('DROP VIEW IF EXISTS foo_virtualtotal;'),
        migrations.RunSQL(sql)
    ]

f_al
f_l
as_al
as_l
fe_al
fe_l
n_al
n_l
sl_al
sl_l